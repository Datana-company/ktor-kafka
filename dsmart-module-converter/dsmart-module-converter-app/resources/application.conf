ktor {
  deployment {
    port = 8080
  }
  application {
    id = "ru.datana.smart.ui.converter.app.ApplicationKt"
    modules = [ru.datana.smart.ui.converter.app.ApplicationKt.module]
  }
  datana {
    converter {
      id = "c17ea7ca-7bbf-4f89-a644-7899f21ac629"
      id = ${?CONVERTER_ID}
    }
  }
  conveyor {
    metalRateEventGen {
      timeout = 5000
      timeout = ${?METAL_RATE_GEN_TIMEOUT}
      maxValue = 0.5
      maxValue = ${?METAL_RATE_GEN_MAX}
      minValue = 0.0
      minValue = ${?METAL_RATE_GEN_MIN}
      changeValue = 0.05
      changeValue = ${?METAL_RATE_GEN_CHANGE}
    }
    metalRatePoint {
      critical = 0.15
      critical = ${?METAL_RATE_POINT_CRITICAL}
      warning = 0.1
      warning = ${?METAL_RATE_POINT_WARNING}
    }
    dataTimeout = 3000
    dataTimeout = ${?DATA_TIMEOUT}
    reactionTime = 3000
    reactionTime = ${?REACTION_TIME}
    sirenLimitTime = 3000
    sirenLimitTime = ${?SIREN_LIMIT_TIME}
    roundingWeight = 0.1
    roundingWeight = ${?ROUNDING_WEIGHT}
  }
  kafka {
    client.id = "ui-client-kafka"
    client.id = ${?KAFKA_CLIENT_ID}
    bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}
    producer {
    }
    consumer {
//      topic.meta = "converter-meta"
      topic.meta = "dev-converter-meta"
      topic.meta = ${?KAFKA_TOPIC_META}
//      topic.math = "converter-math"
      topic.math = "dev-converter-math"
      topic.math = ${?KAFKA_TOPIC_MATH}
//      topic.video = "converter-video"
      topic.video = "dev-converter-video"
      topic.video = ${?KAFKA_TOPIC_VIDEO}
      topic.angles = "converter-angles"
      topic.angles = ${?KAFKA_TOPIC_ANGLES}
      topic.alerts = "converter-alerts"
      topic.alerts = ${?KAFKA_TOPIC_ALERTS}
      topic.events = "converter-events"
      topic.events = ${?KAFKA_TOPIC_EVENTS}
      group.id = "ui-converter"
      group.id = ${?KAFKA_GROUP_ID}
    }
  }
}
paths.base.frames = "frames/"
paths.base.frames = ${?FRAMES_BASE_PATH}
